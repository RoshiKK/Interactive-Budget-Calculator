{"ast":null,"code":"var _jsxFileName = \"D:\\\\Roshik ReactJS Coding\\\\my-app\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport BalanceCard from './BalanceCard';\nimport TransactionForm from './TransactionForm';\nimport TransactionHistory from './TransactionHistory';\nimport FinancialSummary from './FinancialSummary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [lastTransactionType, setLastTransactionType] = useState('');\n  const addTransaction = transaction => {\n    setTransactions([...transactions, transaction]);\n\n    // Update last transaction type based on the transaction type\n    setLastTransactionType(transaction.type);\n  };\n  const deleteTransaction = id => {\n    const deletedTransaction = transactions.find(t => t.id === id);\n    if (deletedTransaction) {\n      // Check if the deleted transaction was the last one added\n      if (deletedTransaction.type === lastTransactionType) {\n        setLastTransactionType('');\n      }\n    }\n    setTransactions(transactions.filter(t => t.id !== id));\n  };\n  const totalIncome = transactions.filter(t => t.type === 'Income').reduce((acc, curr) => acc + parseFloat(curr.amount), 0);\n  const totalExpense = transactions.filter(t => t.type === 'Expense').reduce((acc, curr) => acc + parseFloat(curr.amount), 0);\n  const balance = totalIncome - totalExpense;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-100 min-h-screen p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-5xl mx-auto grid grid-cols-1 lg:grid-cols-2 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-span-1 lg:col-span-2\",\n        children: /*#__PURE__*/_jsxDEV(BalanceCard, {\n          balance: balance,\n          income: totalIncome,\n          expense: totalExpense\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TransactionForm, {\n        addTransaction: addTransaction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TransactionHistory, {\n        transactions: transactions,\n        deleteTransaction: deleteTransaction,\n        lastTransactionType: lastTransactionType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FinancialSummary, {\n        transactions: transactions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ge6VwPttN9RePK+1V5j4m3PAsP4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BalanceCard","TransactionForm","TransactionHistory","FinancialSummary","jsxDEV","_jsxDEV","App","_s","transactions","setTransactions","lastTransactionType","setLastTransactionType","addTransaction","transaction","type","deleteTransaction","id","deletedTransaction","find","t","filter","totalIncome","reduce","acc","curr","parseFloat","amount","totalExpense","balance","className","children","income","expense","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Roshik ReactJS Coding/my-app/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport BalanceCard from './BalanceCard';\r\nimport TransactionForm from './TransactionForm';\r\nimport TransactionHistory from './TransactionHistory';\r\nimport FinancialSummary from './FinancialSummary';\r\n\r\nfunction App() {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [lastTransactionType, setLastTransactionType] = useState('');\r\n\r\n  const addTransaction = (transaction) => {\r\n    setTransactions([...transactions, transaction]);\r\n\r\n    // Update last transaction type based on the transaction type\r\n    setLastTransactionType(transaction.type);\r\n  };\r\n\r\n  const deleteTransaction = (id) => {\r\n    const deletedTransaction = transactions.find(t => t.id === id);\r\n    if (deletedTransaction) {\r\n      // Check if the deleted transaction was the last one added\r\n      if (deletedTransaction.type === lastTransactionType) {\r\n        setLastTransactionType('');\r\n      }\r\n    }\r\n    setTransactions(transactions.filter((t) => t.id !== id));\r\n  };\r\n\r\n  const totalIncome = transactions\r\n    .filter((t) => t.type === 'Income')\r\n    .reduce((acc, curr) => acc + parseFloat(curr.amount), 0);\r\n  const totalExpense = transactions\r\n    .filter((t) => t.type === 'Expense')\r\n    .reduce((acc, curr) => acc + parseFloat(curr.amount), 0);\r\n  const balance = totalIncome - totalExpense;\r\n\r\n  return (\r\n    <div className=\"bg-gray-100 min-h-screen p-4\">\r\n      <div className=\"max-w-5xl mx-auto grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        <div className=\"col-span-1 lg:col-span-2\">\r\n          <BalanceCard balance={balance} income={totalIncome} expense={totalExpense} />\r\n        </div>\r\n        <TransactionForm addTransaction={addTransaction} />\r\n        <TransactionHistory transactions={transactions} deleteTransaction={deleteTransaction} lastTransactionType={lastTransactionType} />\r\n        <FinancialSummary transactions={transactions} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}